{"version":3,"sources":["react-auth0-wrapper.js","components/Navbar.js","API/CloudinaryService.js","components/Photo.js","components/Spinner.js","components/ImageList.js","components/PrivateRoute.js","components/Home.js","components/Lightbox.js","components/UploadedPhotosStatus.js","components/PhotosUploader.js","App.js","serviceWorker.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","NavBar","props","isAuthenticated","logout","menuToggle","toggleMenu","menuIsOpen","className","to","onClick","aria-label","aria-expanded","aria-haspopup","aria-hidden","cloudCredentials","Photo","photos","map","photo","index","key","public_id","e","event","photoIndex","parseInt","currentTarget","id","lightBoxState","updatePhotoIndex","clickHandler","cloudName","publicId","width","height","crop","quality","fetchFormat","Spinner","addBackToTop","backgroundColor","scrollDuration","zIndex","showWhenScrollTopIs","ImageList","fetchPhotos","options","format","type","urlPath","scOptions","Util","withSnakeCaseKeys","CoreCloudinary","new","url","tag","axios","get","then","response","unsortedPhotos","data","resources","sort","a","b","keyA","toUpperCase","keyB","updatePhotoList","state","spinnerShowing","this","prevProps","prevState","setState","length","bool","Component","PrivateRoute","component","path","rest","loginWithRedirect","useEffect","async","appState","targetUrl","render","Home","loading","cloudinaryCore","cloudinary","Cloudinary","cloud_name","ImageLightbox","isOpen","images","image","downloadUrl","flags","mainSrc","nextSrc","prevSrc","imageTitle","href","download","target","rel","onCloseRequest","onMovePrevRequest","onMoveNextRequest","animationDuration","UploadedPhotoStatus","uploadedPhoto","percent","Math","floor","progress","fileName","statusText","role","style","PhotosUploader","photoId","disableClick","multiple","accept","position","onDrop","files","onPhotoSelected","getRootProps","getInputProps","htmlFor","ref","fileInputEl","onChange","exact","file","name","request","post","field","on","onPhotoUploadProgress","end","error","onPhotoUploaded","App","Boolean","hostname","match","ReactDOM","children","onRedirectCallback","initOptions","useState","setIsAuthenticated","user","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","getUser","initAuth0","Provider","value","loginWithPopup","params","console","getIdTokenClaims","getTokenSilently","getTokenWithPopup","domain","config","client_id","clientId","redirect_uri","origin","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0e96d8f.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport createAuth0Client from '@auth0/auth0-spa-js';\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () => window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({ children, onRedirectCallback = DEFAULT_REDIRECT_CALLBACK, ...initOptions }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState();\r\n    const [user, setUser] = useState();\r\n    const [auth0Client, setAuth0] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const initAuth0 = async () => {\r\n            const auth0FromHook = await createAuth0Client(initOptions);\r\n            setAuth0(auth0FromHook);\r\n\r\n            if (window.location.search.includes('code=')) {\r\n                const { appState } = await auth0FromHook.handleRedirectCallback();\r\n                onRedirectCallback(appState);\r\n            }\r\n\r\n            const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n            setIsAuthenticated(isAuthenticated);\r\n\r\n            if (isAuthenticated) {\r\n                const user = await auth0FromHook.getUser();\r\n                setUser(user);\r\n            }\r\n\r\n            setLoading(false);\r\n        };\r\n        initAuth0();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const loginWithPopup = async (params = {}) => {\r\n        setPopupOpen(true);\r\n        try {\r\n            await auth0Client.loginWithPopup(params);\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            setPopupOpen(false);\r\n        }\r\n        const user = await auth0Client.getUser();\r\n        setUser(user);\r\n        setIsAuthenticated(true);\r\n    };\r\n\r\n    const handleRedirectCallback = async () => {\r\n        setLoading(true);\r\n        await auth0Client.handleRedirectCallback();\r\n        const user = await auth0Client.getUser();\r\n        setLoading(false);\r\n        setIsAuthenticated(true);\r\n        setUser(user);\r\n    };\r\n    return (\r\n        <Auth0Context.Provider\r\n            value={{\r\n                isAuthenticated,\r\n                user,\r\n                loading,\r\n                popupOpen,\r\n                loginWithPopup,\r\n                handleRedirectCallback,\r\n                getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n                loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n                getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n                getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n                logout: (...p) => auth0Client.logout(...p)\r\n            }}>\r\n            {children}\r\n        </Auth0Context.Provider>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useAuth0 } from '../react-auth0-wrapper';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = props => {\r\n    const { isAuthenticated, logout } = useAuth0();\r\n\r\n    const menuToggle = () => {\r\n        props.toggleMenu(!props.menuIsOpen);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isAuthenticated && (\r\n                <div className=\"nav-container\">\r\n                    <div className=\"mobile-nav container is-d-md-none has-py-3\">\r\n                        <div className=\"is-d-flex is-justify-between is-align-center\">\r\n                            <Link to=\"/upload\" className=\"btn is-secondary has-text-white\">\r\n                                <span className=\"icon-upload has-mr-2\"></span>Upload\r\n                            </Link>\r\n                            <div>\r\n                                <button\r\n                                    className={'mobile-menu-button ' + (props.menuIsOpen ? 'is-active' : '')}\r\n                                    onClick={menuToggle}\r\n                                    aria-label=\"Toggle menu\"\r\n                                    aria-expanded=\"false\"\r\n                                    aria-haspopup=\"true\">\r\n                                    <span className=\"burger-icon\" aria-hidden=\"true\">\r\n                                        <span></span>\r\n                                    </span>\r\n                                    Menu\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <nav className={props.menuIsOpen ? 'is-open' : ''}>\r\n                            <ul className=\"is-list-unstyled\">\r\n                                <li>\r\n                                    <Link to=\"/\" onClick={menuToggle}>\r\n                                        Home\r\n                                    </Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/professional\" onClick={menuToggle}>\r\n                                        Professional Photos\r\n                                    </Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/party\" onClick={menuToggle}>\r\n                                        Party Photos\r\n                                    </Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/other\" onClick={menuToggle}>\r\n                                        Other Photos\r\n                                    </Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/upload\" onClick={menuToggle}>\r\n                                        Upload Photos\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"has-text-center\">\r\n                                    <button className=\"btn is-primary\" onClick={() => logout()}>\r\n                                        Log out\r\n                                    </button>\r\n                                </li>\r\n                            </ul>\r\n                        </nav>\r\n                    </div>\r\n                    <div className=\"desktop-nav container is-d-none is-d-md-block has-py-3\">\r\n                        <nav className=\"is-d-flex is-justify-end\">\r\n                            <ul className=\"is-list-unstyled is-d-flex is-align-center\">\r\n                                <li>\r\n                                    <Link to=\"/\">Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/professional\">Professional Photos</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/party\">Party Photos</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/other\">Other Photos</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/upload\">Upload Photos</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <button className=\"btn is-primary\" onClick={() => logout()}>\r\n                                        Log out\r\n                                    </button>\r\n                                </li>\r\n                            </ul>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import { Cloudinary as Util } from 'cloudinary-core';\r\n\r\nexport const openUploadWidget = (options, callback) => {\r\n    const scOptions = Util.withSnakeCaseKeys(options);\r\n    window.cloudinary.openUploadWidget(scOptions, callback);\r\n};\r\n\r\n// set your Cloudinary cloud name here\r\nexport const cloudCredentials = {\r\n    cloudName: 'democloudname',\r\n    uploadPreset: 'm6xedmg5'\r\n};\r\n","import React from 'react';\r\nimport { Image, Transformation } from 'cloudinary-react';\r\nimport { cloudCredentials } from '../API/CloudinaryService';\r\n\r\nconst Photo = props => {\r\n    const clickHandler = event => {\r\n        const photoIndex = parseInt(event.currentTarget.id);\r\n        props.lightBoxState(true);\r\n        props.updatePhotoIndex(photoIndex);\r\n    };\r\n\r\n    return props.photos.map((photo, index) => (\r\n        <div key={photo.public_id} className=\"photo col-4 col-md-3 col-xl-2\">\r\n            <div className=\"aspect-ratio-container is-1x1 has-mb-6\">\r\n                <div className=\"aspect-ratio-content has-zoom\">\r\n                    <button onClick={e => clickHandler(e)} id={index}>\r\n                        <Image\r\n                            className=\"media-cover\"\r\n                            cloudName={cloudCredentials.cloudName}\r\n                            publicId={photo.public_id}\r\n                            width=\"200\"\r\n                            height=\"200\"\r\n                            crop=\"thumb\"\r\n                            quality=\"auto\">\r\n                            <Transformation quality=\"auto\" fetchFormat=\"auto\" />\r\n                        </Image>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ));\r\n};\r\n\r\nexport default Photo;\r\n","import React from 'react';\r\n\r\nconst Spinner = props => {\r\n    return (\r\n        <div className=\"spinner-container\">\r\n            <span className=\"spinner\">\r\n                <span className=\"left\">\r\n                    <span className=\"anim\"></span>\r\n                </span>\r\n                <span className=\"right\">\r\n                    <span className=\"anim\"></span>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport { Cloudinary as CoreCloudinary, Util } from 'cloudinary-core';\r\nimport axios from 'axios';\r\nimport Photo from './Photo';\r\nimport Spinner from './Spinner';\r\nimport { addBackToTop } from 'vanilla-back-to-top';\r\nimport { cloudCredentials } from '../API/CloudinaryService';\r\n\r\naddBackToTop({\r\n    backgroundColor: '#17aacf',\r\n    scrollDuration: 400,\r\n    zIndex: 100,\r\n    showWhenScrollTopIs: 100\r\n});\r\n\r\nclass ImageList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { spinnerShowing: true };\r\n    }\r\n\r\n    fetchPhotos = cloudName => {\r\n        const url = (publicId, options) => {\r\n            const scOptions = Util.withSnakeCaseKeys(options);\r\n            const cl = CoreCloudinary.new();\r\n            return cl.url(publicId, scOptions);\r\n        };\r\n\r\n        const options = {\r\n            cloudName: cloudName,\r\n            format: 'json',\r\n            type: 'list'\r\n        };\r\n\r\n        const urlPath = url(this.props.tag, options);\r\n\r\n        axios.get(urlPath).then(response => {\r\n            let unsortedPhotos = response.data.resources;\r\n\r\n            // sort list alphabetically\r\n            const photos = [...unsortedPhotos].sort(function(a, b) {\r\n                let keyA = a.public_id.toUpperCase();\r\n                let keyB = b.public_id.toUpperCase();\r\n                return keyA < keyB ? -1 : keyA > keyB ? 1 : 0;\r\n            });\r\n            this.props.updatePhotoList(photos);\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.fetchPhotos(cloudCredentials.cloudName);\r\n    }\r\n\r\n    shouldComponentUpdate(prevProps, prevState) {\r\n        return this.props.photos !== prevProps.photos || this.state.spinnerShowing !== prevState.spinnerShowing;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.photos !== prevProps.photos) {\r\n            this.setState({ spinnerShowing: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container has-pt-11\">\r\n                <h3 className=\"has-mb-2\">{this.props.tag} photos</h3>\r\n                {this.props.photos.length} images found\r\n                {this.props.photos.length > 0 && (\r\n                    <div className=\"image-list row has-mt-6\">\r\n                        <Photo\r\n                            photos={this.props.photos}\r\n                            lightBoxState={bool => this.props.lightBoxState(bool)}\r\n                            updatePhotoIndex={index => this.props.updatePhotoIndex(index)}\r\n                        />\r\n                    </div>\r\n                )}\r\n                {this.state.spinnerShowing && <Spinner />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageList;\r\n","import React, { useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useAuth0 } from '../react-auth0-wrapper';\r\n\r\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\r\n    const { isAuthenticated, loginWithRedirect } = useAuth0();\r\n\r\n    useEffect(() => {\r\n        const fn = async () => {\r\n            if (!isAuthenticated) {\r\n                await loginWithRedirect({\r\n                    appState: { targetUrl: '/#' + path }\r\n                });\r\n            }\r\n        };\r\n        fn();\r\n    }, [isAuthenticated, loginWithRedirect, path]);\r\n\r\n    const render = props => (isAuthenticated === true ? <Component {...props} /> : null);\r\n\r\n    return <Route path={path} key={path} render={render} {...rest} />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect } from 'react';\r\nimport { useAuth0 } from '../react-auth0-wrapper';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from './Spinner';\r\n\r\nconst Home = props => {\r\n    const { isAuthenticated, loginWithRedirect } = useAuth0();\r\n    const lightBoxState = props.lightBoxState;\r\n    const { loading } = useAuth0();\r\n\r\n    useEffect(() => {\r\n        lightBoxState(false);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <Spinner />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isAuthenticated && (\r\n                <section className=\"home has-pt-10\">\r\n                    <header className=\"header-with-title-block has-mb-6\">\r\n                        <div className=\"header-image is-d-flex is-align-end\">\r\n                            <div className=\"container header-content\">\r\n                                <h1 className=\"has-text-uppercase has-text-white has-text-center has-mb-2 has-mb-md-0\">\r\n                                    <span className=\"is-d-block is-d-sm-inline\">Our</span> wedding photos\r\n                                </h1>\r\n                                <hr className=\"is-in-header\" />\r\n                                <p className=\"header-sub-title has-text-center has-text-gray-0 has-mt-2 has-mt-md-3\"></p>\r\n                            </div>\r\n                        </div>\r\n                    </header>\r\n                    <div className=\"container\">\r\n                        <p className=\"has-text-center has-pt-3 has-pb-6\">\r\n                            You can view or download our wedding photos and also upload yours from the party{' '}\r\n                            <Link to=\"/upload\" className=\"has-font-size-body has-text-secondary has-font-weight-bold\">\r\n                                here\r\n                            </Link>\r\n                            .\r\n                        </p>\r\n                        <div className=\"row is-d-flex is-justify-center\">\r\n                            <div className=\"col-sm-4 has-text-center\">\r\n                                <h3>\r\n                                    <Link to=\"/professional\" className=\"has-text-secondary\">\r\n                                        Professional Photos\r\n                                    </Link>\r\n                                </h3>\r\n                            </div>\r\n                            <div className=\"col-sm-4 has-text-center\">\r\n                                <h3>\r\n                                    <Link to=\"/party\" className=\"has-text-secondary\">\r\n                                        Party Photos\r\n                                    </Link>\r\n                                </h3>\r\n                            </div>\r\n                            <div className=\"col-sm-4 has-text-center\">\r\n                                <h3>\r\n                                    <Link to=\"/other\" className=\"has-text-secondary\">\r\n                                        Other Photos\r\n                                    </Link>\r\n                                </h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )}\r\n\r\n            {!isAuthenticated && (\r\n                <section className=\"login-hero is-d-flex is-justify-center is-align-center\">\r\n                    <div className=\"container has-text-center\">\r\n                        <h2 className=\"has-mb-3\">Tom &amp; Laura's wedding album</h2>\r\n                        <p className=\"sub-title has-mt-0 has-mb-5\">Login below to view, download and share photos</p>\r\n                        <button className=\"btn is-primary\" onClick={() => loginWithRedirect({})}>\r\n                            Log in\r\n                        </button>\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport cloudinary from 'cloudinary-core';\r\nimport 'react-image-lightbox/style.css';\r\nimport { cloudCredentials } from '../API/CloudinaryService';\r\n\r\nconst cloudinaryCore = new cloudinary.Cloudinary({ cloud_name: cloudCredentials.cloudName });\r\n\r\nexport default class ImageLightbox extends React.Component {\r\n    shouldComponentUpdate(prevProps) {\r\n        return this.props.photoIndex !== prevProps.photoIndex || this.props.isOpen !== prevProps.isOpen;\r\n    }\r\n\r\n    render() {\r\n        const { isOpen, photos, photoIndex } = this.props;\r\n\r\n        const images = photos.map(image => {\r\n            return cloudinaryCore.url(image.public_id, {\r\n                quality: 'auto:best',\r\n                width: 800,\r\n                height: 800,\r\n                crop: 'fit'\r\n            });\r\n        });\r\n\r\n        const downloadUrl = photos.map(image => {\r\n            return cloudinaryCore.url(image.public_id, {\r\n                quality: '100',\r\n                flags: 'attachment'\r\n            });\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                {isOpen && (\r\n                    <Lightbox\r\n                        mainSrc={images[photoIndex]}\r\n                        nextSrc={images[(photoIndex + 1) % images.length]}\r\n                        prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n                        imageTitle={\r\n                            <a\r\n                                href={downloadUrl[photoIndex]}\r\n                                download=\"Photo\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\">\r\n                                <span className=\"icon-download has-mr-2\" />\r\n                                Download\r\n                            </a>\r\n                        }\r\n                        onCloseRequest={() => this.props.lightBoxState(false)}\r\n                        onMovePrevRequest={() => {\r\n                            this.props.updatePhotoIndex((photoIndex + images.length - 1) % images.length);\r\n                        }}\r\n                        onMoveNextRequest={() => {\r\n                            this.props.updatePhotoIndex((photoIndex + 1) % images.length);\r\n                        }}\r\n                        animationDuration={600}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass UploadedPhotoStatus extends Component {\r\n    render() {\r\n        const uploadedPhoto = this.props.uploadedPhoto;\r\n        const response = uploadedPhoto.response;\r\n        const percent = Math.floor(uploadedPhoto.progress.percent);\r\n\r\n        return (\r\n            <div>\r\n                <h3>{uploadedPhoto.fileName}</h3>\r\n\r\n                <div className=\"status\">\r\n                    {!response && <div>Uploading... {percent}%</div>}\r\n                    {!response && <div>In progress</div>}\r\n                    {response && <div className=\"status-code\">Upload completed {response.statusText}</div>}\r\n                </div>\r\n                <div className=\"progress-bar has-mt-6\">\r\n                    <div className=\"progress\" role=\"progressbar\" style={{ width: percent + '%' }} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UploadedPhotoStatus;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport request from 'superagent';\r\nimport Dropzone from 'react-dropzone';\r\nimport UploadedPhotoStatus from './UploadedPhotosStatus';\r\nimport { cloudCredentials } from '../API/CloudinaryService';\r\n\r\nclass PhotosUploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            uploadedPhoto: {}\r\n        };\r\n        this.photoId = 1;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container has-pt-11\">\r\n                <Dropzone\r\n                    id=\"direct-upload-dropzone\"\r\n                    disableClick={true}\r\n                    multiple={false}\r\n                    accept=\"image/*\"\r\n                    style={{ position: 'relative' }}\r\n                    onDrop={files => this.onPhotoSelected(files)}>\r\n                    {({ getRootProps, getInputProps }) => (\r\n                        <div id=\"direct-upload\" className=\"outline-none\" {...getRootProps()}>\r\n                            <h3>Share Photo</h3>\r\n                            <p>Add a photo from the party by clicking Upload.</p>\r\n                            <p>You can also drag and drop an image file into the dashed area.</p>\r\n                            <p>\r\n                                After Your photo has been uploaded it will be available on the Party Photos page in less\r\n                                than 2 minutes.\r\n                            </p>\r\n                            <form>\r\n                                <div className=\"is-d-flex is-align-center\">\r\n                                    <label className=\"is-d-block has-mr-6\">Image:</label>\r\n                                    <div className=\"upload_button_holder\">\r\n                                        <label className=\"btn is-secondary\" htmlFor=\"fileupload\">\r\n                                            <span className=\"icon-upload has-mr-2\"></span>Upload\r\n                                        </label>\r\n                                        <input\r\n                                            {...getInputProps()}\r\n                                            type=\"file\"\r\n                                            id=\"fileupload\"\r\n                                            accept=\"image/*\"\r\n                                            multiple=\"multiple\"\r\n                                            ref={fileInputEl => (this.fileInputEl = fileInputEl)}\r\n                                            onChange={() => this.onPhotoSelected(this.fileInputEl.files)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            <p>Status</p>\r\n                        </div>\r\n                    )}\r\n                </Dropzone>\r\n                {this.state.uploadedPhoto.progress && <UploadedPhotoStatus uploadedPhoto={this.state.uploadedPhoto} />}\r\n                <Link className=\"back_link has-text-primary is-d-block has-mt-6\" exact=\"true\" to=\"/party\">\r\n                    <span className=\"icon-back has-mr-2\"></span>Back to photos\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onPhotoSelected(files) {\r\n        const url = `https://api.cloudinary.com/v1_1/${cloudCredentials.cloudName}/upload`;\r\n\r\n        for (let file of files) {\r\n            const photoId = this.photoId++;\r\n            const fileName = file.name;\r\n            request\r\n                .post(url)\r\n                .field('upload_preset', cloudCredentials.uploadPreset)\r\n                .field('file', file)\r\n                .field('multiple', true)\r\n                .field('tags', this.props.tag)\r\n                .field('context', '')\r\n                .on('progress', progress => this.onPhotoUploadProgress(photoId, fileName, progress))\r\n                .end((error, response) => {\r\n                    this.onPhotoUploaded(response);\r\n                });\r\n        }\r\n    }\r\n\r\n    onPhotoUploadProgress(id, fileName, progress) {\r\n        this.setState({\r\n            uploadedPhoto: {\r\n                id: id,\r\n                fileName: fileName,\r\n                progress: progress\r\n            }\r\n        });\r\n    }\r\n\r\n    onPhotoUploaded(response) {\r\n        this.setState({\r\n            uploadedPhoto: {\r\n                ...this.state.uploadedPhoto,\r\n                response: response\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default PhotosUploader;\r\n","import React from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport NavBar from './components/Navbar';\r\nimport ImageList from './components/ImageList';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport Home from './components/Home';\r\nimport ImageLightbox from './components/Lightbox';\r\nimport PhotosUploader from './components/PhotosUploader';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            photos: [],\r\n            photoIndex: 0,\r\n            isOpen: false,\r\n            menuIsOpen: false\r\n        };\r\n    }\r\n\r\n    updatePhotoList = photos => {\r\n        this.setState({ photos });\r\n    };\r\n\r\n    updatePhotoIndex = photoIndex => {\r\n        this.setState({ photoIndex });\r\n    };\r\n\r\n    lightBoxState = bool => {\r\n        this.setState({ isOpen: bool });\r\n    };\r\n\r\n    toggleMenu = bool => {\r\n        this.setState({ menuIsOpen: bool });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <HashRouter>\r\n                    <NavBar menuIsOpen={this.state.menuIsOpen} toggleMenu={bool => this.toggleMenu(bool)} />\r\n\r\n                    <Switch>\r\n                        <Route\r\n                            path=\"/\"\r\n                            exact\r\n                            render={props => <Home {...props} lightBoxState={bool => this.lightBoxState(bool)} />}\r\n                        />\r\n                        <PrivateRoute\r\n                            path=\"/professional/\"\r\n                            exact\r\n                            render={props => (\r\n                                <ImageList\r\n                                    {...props}\r\n                                    updatePhotoList={photos => this.updatePhotoList(photos)}\r\n                                    photos={this.state.photos}\r\n                                    tag={'professional'}\r\n                                    lightBoxState={bool => this.lightBoxState(bool)}\r\n                                    updatePhotoIndex={index => this.updatePhotoIndex(index)}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <PrivateRoute\r\n                            path=\"/party/\"\r\n                            exact\r\n                            render={props => (\r\n                                <ImageList\r\n                                    {...props}\r\n                                    updatePhotoList={photos => this.updatePhotoList(photos)}\r\n                                    photos={this.state.photos}\r\n                                    tag={'party'}\r\n                                    lightBoxState={bool => this.lightBoxState(bool)}\r\n                                    updatePhotoIndex={index => this.updatePhotoIndex(index)}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <PrivateRoute\r\n                            path=\"/other/\"\r\n                            exact\r\n                            render={props => (\r\n                                <ImageList\r\n                                    {...props}\r\n                                    updatePhotoList={photos => this.updatePhotoList(photos)}\r\n                                    photos={this.state.photos}\r\n                                    tag={'others'}\r\n                                    lightBoxState={bool => this.lightBoxState(bool)}\r\n                                    updatePhotoIndex={index => this.updatePhotoIndex(index)}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <PrivateRoute\r\n                            path=\"/upload/\"\r\n                            exact\r\n                            render={props => <PhotosUploader {...props} tag={'Party'} />}\r\n                        />\r\n                    </Switch>\r\n                </HashRouter>\r\n                <ImageLightbox\r\n                    isOpen={this.state.isOpen}\r\n                    photoIndex={this.state.photoIndex}\r\n                    photos={this.state.photos}\r\n                    updatePhotoIndex={index => this.updatePhotoIndex(index)}\r\n                    lightBoxState={bool => this.lightBoxState(bool)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './sass/screen.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Auth0Provider } from './react-auth0-wrapper';\r\nimport config from './auth_config.json';\r\n\r\n// A function that routes the user to the right place\r\n// after login\r\nconst onRedirectCallback = appState => {\r\n    window.history.replaceState(\r\n        {},\r\n        document.title,\r\n        appState && appState.targetUrl ? appState.targetUrl : window.location.pathname\r\n    );\r\n};\r\n\r\nReactDOM.render(\r\n    <Auth0Provider\r\n        domain={config.domain}\r\n        client_id={config.clientId}\r\n        redirect_uri={window.location.origin}\r\n        onRedirectCallback={onRedirectCallback}>\r\n        <App />\r\n    </Auth0Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}